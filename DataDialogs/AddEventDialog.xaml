<Window
	x:Class="Imperial_Commander_Editor.AddEventDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Imperial_Commander_Editor"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="Add New Event"
	Width="900"
	MaxHeight="800"
	ContentRendered="Window_ContentRendered"
	MouseDown="Window_MouseDown"
	SizeToContent="Height"
	Style="{StaticResource dws}"
	WindowStartupLocation="CenterScreen"
	mc:Ignorable="d">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<DataTemplate x:Key="k1" DataType="{x:Type local:TriggeredBy}">
				<UniformGrid Columns="3">
					<TextBlock VerticalAlignment="Center" Text="{Binding triggerName}" />
					<TextBox
						VerticalAlignment="Center"
						KeyDown="nameTB_KeyDown"
						Text="{Binding triggerValue}" />
					<Button
						x:Name="removeAdditionalTriggerButton"
						Width="25"
						Height="25"
						HorizontalAlignment="Right"
						Click="removeAdditionalTriggerButton_Click"
						Style="{StaticResource MaterialDesignFloatingActionButton}">
						<materialDesign:PackIcon
							Width="20"
							Height="20"
							Foreground="Red"
							Kind="Remove" />
					</Button>
				</UniformGrid>
			</DataTemplate>

			<DataTemplate x:Key="eaction">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>

					<TextBlock VerticalAlignment="Center" Text="{Binding displayName}" />

					<UniformGrid Grid.Column="1" Columns="2">
						<Button
							x:Name="upBtn"
							Width="25"
							Height="25"
							Click="upBtn_Click"
							Content="{materialDesign:PackIcon Kind=ChevronUp}"
							Style="{StaticResource MaterialDesignFloatingActionButton}" />
						<Button
							x:Name="downBtn"
							Width="25"
							Height="25"
							Margin="5,0,0,0"
							Click="downBtn_Click"
							Content="{materialDesign:PackIcon Kind=ChevronDown}"
							Style="{StaticResource MaterialDesignFloatingActionButton}" />
					</UniformGrid>
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>

	<Border BorderBrush="MediumPurple" BorderThickness="2">
		<GroupBox Header="Add New Event" Style="{DynamicResource MaterialDesignGroupBox}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>

				<UniformGrid Columns="2">
					<!--  column 1  -->
					<Grid Margin="0,0,5,0">
						<Grid.RowDefinitions>
							<RowDefinition Height="auto" />
							<RowDefinition Height="auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<StackPanel>
							<UniformGrid Columns="2">
								<!--  event name  -->
								<GroupBox
									Margin="0,0,5,0"
									Background="#FF503B7C"
									Header="Event Name">
									<TextBox
										x:Name="nameTB"
										CaretBrush="White"
										KeyDown="nameTB_KeyDown"
										Style="{StaticResource MaterialDesignOutlinedTextBox}"
										Text="{Binding name}" />
								</GroupBox>
								<!--  event text  -->
								<GroupBox
									Margin="5,0,0,0"
									Background="#FF503B7C"
									Header="Event Text">
									<StackPanel Orientation="Horizontal">
										<TextBlock
											x:Name="etInfo"
											Margin="0,0,10,0"
											VerticalAlignment="Center"
											Text="Text Not Set" />
										<Button
											x:Name="editTextButton"
											Click="editTextButton_Click"
											Content="Edit Text..." />
									</StackPanel>
								</GroupBox>
							</UniformGrid>
							<TextBlock
								Margin="0,5,0,0"
								HorizontalAlignment="Center"
								FontStyle="Italic"
								Text="If the Event Text isn't set, this Event will still fire, but no text is shown."
								TextWrapping="Wrap" />
						</StackPanel>
						<!--  event actions  -->
						<GroupBox
							Grid.Row="1"
							MaxHeight="275"
							Margin="0,10,0,0"
							Header="Event Actions">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="auto" />
								</Grid.ColumnDefinitions>
								<ListView
									x:Name="eventActionsCB"
									HorizontalContentAlignment="Stretch"
									d:ItemsSource="{d:SampleData ItemCount=3}"
									ItemContainerStyle="{StaticResource lbitem}"
									ItemTemplate="{StaticResource eaction}"
									ItemsSource="{Binding eventActions}"
									MouseDoubleClick="eventActionsCB_MouseDoubleClick"
									SelectedValue="{Binding selectedEventAction, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />

								<!--  buttons  -->
								<StackPanel
									Grid.Column="1"
									HorizontalAlignment="Right"
									VerticalAlignment="Top"
									Orientation="Horizontal">
									<materialDesign:PopupBox
										Width="35"
										Height="35"
										Margin="10,0,0,0"
										Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
										<materialDesign:Card
											MaxHeight="200"
											Margin="5"
											BorderBrush="MediumPurple"
											BorderThickness="2">
											<StackPanel>
												<Menu Background="Purple">
													<MenuItem Header="General">
														<MenuItem
															Click="MenuItem_Click"
															Header="Mission Management"
															Tag="G1" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Change Mission Info"
															Tag="G2" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Change Objective"
															Tag="G3" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Variable(s)"
															Tag="G4" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Threat"
															Tag="G5" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Activate Event Group"
															Tag="G8" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Round Limit"
															Tag="G10" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Set Countdown"
															Tag="G11" />
													</MenuItem>
													<MenuItem Header="Dialogs">
														<MenuItem
															Click="MenuItem_Click"
															Header="Text Box"
															Tag="G7" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Question Prompt"
															Tag="G6" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Input Prompt"
															Tag="G9" />
													</MenuItem>
													<MenuItem Header="Deployment">
														<MenuItem
															Click="MenuItem_Click"
															Header="Enemy Deployment"
															Tag="D1" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Ally/Rebel Deployment"
															Tag="D2" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Optional Deployment"
															Tag="D3" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Random Deployment"
															Tag="D4" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Add Group(s) to Deployment Hand"
															Tag="D5" />
														<MenuItem
															Click="MenuItem_Click"
															Header="(DEPRECATED) Custom Deployment"
															Tag="D6" />
													</MenuItem>
													<MenuItem Header="Group Manipulation">
														<MenuItem
															Click="MenuItem_Click"
															Header="Change Group Instructions"
															Tag="GM1" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Change Priority Target"
															Tag="GM2" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Change Reposition Instructions"
															Tag="GM4" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Ready / Exhaust a Group"
															Tag="GM3" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Reset Group Defaults"
															Tag="GM5" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Remove Group"
															Tag="GM6" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Query Group"
															Tag="GM7" />
													</MenuItem>
													<MenuItem Header="Map and Tokens">
														<MenuItem
															Click="MenuItem_Click"
															Header="Map Management"
															Tag="M1" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Map Entity"
															Tag="M2" />
													</MenuItem>
													<MenuItem Header="Campaign Management">
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify XP"
															Tag="CM1" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Credits"
															Tag="CM2" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Modify Fame and Awards"
															Tag="CM3" />
														<MenuItem
															Click="MenuItem_Click"
															Header="Set Next Mission"
															Tag="CM4" />
													</MenuItem>
												</Menu>
											</StackPanel>
										</materialDesign:Card>
									</materialDesign:PopupBox>
									<Button
										x:Name="removeActionButton"
										Width="35"
										Height="35"
										Margin="5,0,0,0"
										Click="removeActionButton_Click"
										Style="{StaticResource MaterialDesignFloatingActionButton}">
										<materialDesign:PackIcon
											Width="20"
											Height="20"
											Foreground="Red"
											Kind="RemoveBold" />
									</Button>
								</StackPanel>
							</Grid>
						</GroupBox>
						<!--  additional triggers  -->
						<GroupBox
							Grid.Row="2"
							Margin="0,10,0,0"
							Header="'Triggered By' Additional Triggers">
							<Grid Margin="5">
								<Grid.RowDefinitions>
									<RowDefinition Height="auto" />
									<RowDefinition Height="auto" />
									<RowDefinition Height="1*" />
								</Grid.RowDefinitions>

								<UniformGrid Columns="3">
									<TextBlock VerticalAlignment="Center" Text="Trigger Name" />
									<TextBlock VerticalAlignment="Center" Text="When Value Is..." />
									<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
										<!--  add existing  -->
										<materialDesign:PopupBox
											Width="25"
											Height="25"
											Margin="0,0,10,0"
											StaysOpen="True"
											ToolTip="Add Existing Trigger">
											<Border MaxHeight="200" Margin="5">
												<ScrollViewer VerticalScrollBarVisibility="Auto">
													<ListBox
														x:Name="existingTriggersLB"
														DisplayMemberPath="name"
														SelectionChanged="existingTriggersLB_SelectionChanged" />
												</ScrollViewer>
											</Border>
										</materialDesign:PopupBox>
										<!--  add new  -->
										<Button
											x:Name="addAdditionalTriggerButton"
											Width="35"
											Height="35"
											Click="addAdditionalTriggerButton_Click"
											Style="{StaticResource MaterialDesignFloatingActionButton}"
											ToolTip="Add New Trigger">
											<Image Height="20" Source="../Assets/addtrigger.png" />
										</Button>
									</StackPanel>
								</UniformGrid>

								<Separator Grid.Row="1" Margin="0,5,0,2" />

								<!--  LIST BOX  -->
								<ListBox
									Grid.Row="2"
									HorizontalContentAlignment="Stretch"
									ItemTemplate="{StaticResource k1}"
									ItemsSource="{Binding additionalTriggers}">
									<ListBox.ItemContainerStyle>
										<Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="ListBoxItem">
											<Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="False" />
										</Style>
									</ListBox.ItemContainerStyle>
								</ListBox>
							</Grid>
						</GroupBox>
					</Grid>

					<!--  column 2  -->
					<StackPanel Margin="5,0,0,0">
						<GroupBox
							Grid.Row="0"
							Margin="0,0,0,10"
							Padding="10"
							Background="{StaticResource GroupBG}"
							Header="Trigger Activation Behavior (includes 'Additional Triggers')">
							<StackPanel>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
									</Grid.ColumnDefinitions>
									<StackPanel Margin="0,5,0,0">
										<TextBlock Margin="0,0,0,0" Text="Which Triggers fire this Event?" />
									</StackPanel>

									<StackPanel
										Grid.Column="1"
										HorizontalAlignment="Center"
										Orientation="Horizontal">
										<TextBlock
											HorizontalAlignment="Right"
											VerticalAlignment="Center"
											Text="Any" />
										<ToggleButton
											Margin="10,0"
											IsChecked="{Binding behaviorAll}"
											Style="{DynamicResource MaterialDesignSwitchSecondaryToggleButton}" />
										<TextBlock
											HorizontalAlignment="Left"
											VerticalAlignment="Center"
											Text="All" />
									</StackPanel>
								</Grid>

								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
									</Grid.ColumnDefinitions>
									<CheckBox
										Margin="0,10,4,4"
										Content="This Event Is Repeatable"
										IsChecked="{Binding isRepeatable}"
										Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
									<CheckBox
										Grid.Column="1"
										Margin="0,5,4,4"
										Content="Fires At End Of Current Round"
										IsChecked="{Binding isEndOfCurrentRound}"
										Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
								</Grid>
							</StackPanel>
						</GroupBox>

						<!--<GroupBox
							Margin="0,0,0,10"
							Header="Event Scope and Trigger Activation Behavior">
							<StackPanel>
								<StackPanel Orientation="Horizontal" Visibility="Collapsed">
									<TextBlock
										Margin="0,0,10,0"
										VerticalAlignment="Center"
										Text="Global Scope:" />
									<UniformGrid Columns="3">
										<TextBlock
											HorizontalAlignment="Right"
											VerticalAlignment="Center"
											Text="No" />
										<ToggleButton
											x:Name="globalToggle"
											Margin="10,0"
											IsChecked="{Binding isGlobal}" />
										<TextBlock
											HorizontalAlignment="Left"
											VerticalAlignment="Center"
											Text="Yes" />
									</UniformGrid>
								</StackPanel>

							</StackPanel>
						</GroupBox>-->

						<GroupBox
							Margin="0,0,0,5"
							Background="#FF503B7C"
							Header="'Triggered By' General Triggers">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<UniformGrid Grid.Row="0" Columns="2">
									<!--  left  -->
									<StackPanel>
										<!--  start of round  -->
										<StackPanel Orientation="Horizontal">
											<CheckBox
												Content="Start of Round"
												IsChecked="{Binding useStartOfRound}"
												Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
											<TextBox
												Width="30"
												Margin="10,0"
												VerticalAlignment="Center"
												KeyDown="nameTB_KeyDown"
												Text="{Binding startOfRound}" />
										</StackPanel>
										<!--  end of round  -->
										<StackPanel Orientation="Horizontal">
											<CheckBox
												Content="End of Round"
												IsChecked="{Binding useEndOfRound}"
												Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
											<TextBox
												Width="30"
												Margin="10,0"
												VerticalAlignment="Center"
												KeyDown="nameTB_KeyDown"
												Text="{Binding endOfRound}" />
										</StackPanel>
										<CheckBox
											Content="All Enemy Groups Defeated"
											IsChecked="{Binding useAllGroupsDefeated}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<!--  any hero defeated  -->
										<CheckBox
											Content="Any Hero Withdraws"
											IsChecked="{Binding useAnyHeroDefeated}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
									</StackPanel>
									<!--  right  -->
									<StackPanel Margin="0,0,0,10">
										<CheckBox
											Content="Start of Each Round"
											IsChecked="{Binding useStartOfEachRound}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<CheckBox
											Content="End of Each Round"
											IsChecked="{Binding useEndOfEachRound}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<CheckBox
											Content="All Heroes Are Wounded"
											IsChecked="{Binding useAllHeroesWounded}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<CheckBox
											Content="Any Hero Wounded"
											IsChecked="{Binding useAnyHeroWounded}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
									</StackPanel>
								</UniformGrid>

								<!--  bottom half  -->
								<StackPanel Grid.Row="1" Margin="0,10,0,0">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="2*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
										</Grid.RowDefinitions>
										<!--  ally defeated  -->
										<CheckBox
											Grid.Row="0"
											Grid.Column="0"
											Content="Ally Defeated"
											IsChecked="{Binding useAllyDefeated}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<ComboBox
											x:Name="alliesCB"
											Grid.Row="0"
											Grid.Column="1"
											DisplayMemberPath="name"
											SelectedValue="{Binding allyDefeated}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}" />

										<!--  hero wounded  -->
										<CheckBox
											Grid.Row="1"
											Grid.Column="0"
											Content="Hero Wounded"
											IsChecked="{Binding useHeroWounded}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<ComboBox
											x:Name="woundedCB"
											Grid.Row="1"
											Grid.Column="1"
											Margin="0,5"
											DisplayMemberPath="name"
											SelectedValue="{Binding heroWounded}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}" />

										<!--  hero withdraws  -->
										<CheckBox
											Grid.Row="2"
											Grid.Column="0"
											Content="Hero Withdraws"
											IsChecked="{Binding useHeroWithdraws}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<ComboBox
											x:Name="withdrawsCB"
											Grid.Row="2"
											Grid.Column="1"
											DisplayMemberPath="name"
											SelectedValue="{Binding heroWithdraws}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}" />

										<!--  activation  -->
										<CheckBox
											Grid.Row="3"
											Grid.Column="0"
											Content="Activation Of"
											IsChecked="{Binding useActivation}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
										<ComboBox
											x:Name="activationCB"
											Grid.Row="3"
											Grid.Column="1"
											Margin="0,5"
											SelectedValue="{Binding activationOf}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name" />
																<Binding Path="id" />
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>

									</Grid>
								</StackPanel>
							</Grid>
						</GroupBox>
					</StackPanel>

					<!--<materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
  PlacementMode="BottomAndAlignCentres"
  ToolTipService.Placement="Right"
  ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox">
					<StackPanel>
						<Button ToolTip="One" Content="1" />
						<Button ToolTip="Two" Content="2" />
						<Button ToolTip="Three" Content="3" />
					</StackPanel>
				</materialDesign:PopupBox>-->
				</UniformGrid>

				<StackPanel Grid.Row="1">
					<Separator Margin="0,10,0,10" />
					<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
						<Button
							x:Name="okButton"
							Click="okButton_Click"
							Content="ACCEPT" />
						<Button
							x:Name="cancelButton"
							Margin="10,0,0,0"
							HorizontalAlignment="Right"
							Click="cancelButton_Click"
							Content="CANCEL"
							IsCancel="True"
							Visibility="{Binding showCancelBtn, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanToVisibilityConverter}}" />
					</StackPanel>
				</StackPanel>
			</Grid>
		</GroupBox>
	</Border>
</Window>
