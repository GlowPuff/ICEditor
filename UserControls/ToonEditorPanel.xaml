<UserControl x:Class="Imperial_Commander_Editor.ToonEditorPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Imperial_Commander_Editor"
             mc:Ignorable="d" 
						 Style="{StaticResource dus}"
						 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="950" d:DesignWidth="800">

	<UserControl.Resources>
		<local:RadioBoolToIntConverter x:Key="rbConv" />
		<BooleanToVisibilityConverter x:Key="b2vis"/>
	</UserControl.Resources>

	<StackPanel>
		<UniformGrid Columns="2">
			<!--LEFT-->
			<StackPanel Margin="0,0,5,0">
				<GroupBox x:Name="propBox" Header="Character Information" Background="{StaticResource GroupBG}">
					<!--GENERAL PROPERTIES-->
					<StackPanel>
						<TextBox x:Name="nameTB" Style="{StaticResource MaterialDesignOutlinedTextBox}" Text="{Binding cardName}" materialDesign:HintAssist.Hint="Character Name (Required)" KeyDown="textbox_KeyDown" TextChanged="nameTB_TextChanged" />
						<TextBox x:Name="subnameTB" Style="{StaticResource MaterialDesignOutlinedTextBox}" Text="{Binding cardSubName}" materialDesign:HintAssist.Hint="Character SubName (Optional)" KeyDown="textbox_KeyDown" Margin="0,10,0,0" />

						<!--ID-->
						<TextBlock Text="Character ID:" HorizontalAlignment="Center" Margin="0,10,0,0"/>
						<TextBlock Text="{Binding cardID}" FontStyle="Italic" FontWeight="Bold"  Foreground="Violet" HorizontalAlignment="Center" Margin="0,5,0,0"/>

						<!--CHARACTER TYPE-->
						<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0" >
							<StackPanel>
								<TextBlock Text="This Character is a:" HorizontalAlignment="Center"/>
								<WrapPanel HorizontalAlignment="Center">
									<RadioButton x:Name="isHeroCheck" Content="Hero" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding characterType, ConverterParameter={x:Static local:CharacterType.Hero}, Converter={StaticResource rbConv}}" GroupName="ctype" MinWidth="75"/>
									<RadioButton x:Name="isAllyCheck" Content="Ally" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding characterType, ConverterParameter={x:Static local:CharacterType.Ally}, Converter={StaticResource rbConv}}" GroupName="ctype" MinWidth="75"/>
									<RadioButton x:Name="isRebelCheck" Content="Rebel / Neutral" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding characterType, ConverterParameter={x:Static local:CharacterType.Rebel}, Converter={StaticResource rbConv}}" GroupName="ctype" MinWidth="75"/>
									<RadioButton x:Name="isEnemyCheck" Content="Enemy Group" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding characterType, ConverterParameter={x:Static local:CharacterType.Imperial}, Converter={StaticResource rbConv}}" GroupName="ctype" MinWidth="75"/>
									<RadioButton x:Name="isVillainCheck" Content="Villain" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding characterType, ConverterParameter={x:Static local:CharacterType.Villain}, Converter={StaticResource rbConv}}" GroupName="ctype" MinWidth="75"/>
								</WrapPanel>
								<TextBlock x:Name="setupInfo" Padding="5" Text="Character Type affects how this Character can be used." TextWrapping="Wrap" FontStyle="Italic" Margin="0,0,0,10" Visibility="Visible"/>

								<Button x:Name="charHelpButton" Content="HELP ME CHOOSE..." Click="charHelpButton_Click"/>
							</StackPanel>
						</materialDesign:Card>

						<!--CUSTOM COLOR-->
						<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0" >
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<TextBlock Text="Icon Outline Color:" VerticalAlignment="Center"/>
								<ComboBox Grid.Column="1" Margin="10,0,0,0" Style="{StaticResource MaterialDesignOutlinedComboBox}" ItemsSource="{Binding deploymentColors, RelativeSource={RelativeSource AncestorType=UserControl}}" SelectedValue="{Binding outlineColor}" DisplayMemberPath="name" SelectedValuePath="name"/>
							</Grid>
						</materialDesign:Card>

						<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0" >
							<StackPanel>
								<UniformGrid Columns="4" HorizontalAlignment="Left">
									<TextBlock Text="Faction:" HorizontalAlignment="Center" VerticalAlignment="Center"/>
									<RadioButton Content="Imperial" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding faction, ConverterParameter={x:Static local:Factions.Imperial}, Converter={StaticResource rbConv}}"/>

									<RadioButton Content="Mercenary" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding faction, ConverterParameter={x:Static local:Factions.Mercenary}, Converter={StaticResource rbConv}}"/>
								</UniformGrid>

								<TextBlock Text="Faction is only relevant for Enemies and Villains." FontStyle="Italic" HorizontalAlignment="Center"/>
							</StackPanel>
						</materialDesign:Card>

						<Grid Margin="10,15,10,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="1*"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="1*"/>
							</Grid.ColumnDefinitions>

							<UniformGrid Columns="2">
								<TextBlock Text="Tier:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0"/>
								<ComboBox x:Name="tierCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding deploymentCard.tier}"/>
							</UniformGrid>

							<UniformGrid Columns="2" Grid.Column="2">
								<TextBlock Text="Priority:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0"/>
								<ComboBox x:Name="priorityCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding deploymentCard.priority}"/>
							</UniformGrid>
						</Grid>
					</StackPanel>
				</GroupBox>

				<!--APPEARANCE-->
				<GroupBox Header="Appearance" Background="{StaticResource GroupBG}" Margin="0,10,0,0">
					<StackPanel>
						<!--FACTION FILTER-->
						<StackPanel>
							<TextBlock Text="Filter By Custom Icons:" VerticalAlignment="Center" Margin="0,0,10,10"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
								<Button x:Name="filterAllButton" Content="All" ToolTip="Show All Icons" Click="filterAllButton_Click"/>
								<Button x:Name="filterRebelButton" Content="Rebel" Margin="10,0" ToolTip="Show Only Rebel Icons" Click="filterRebelButton_Click"/>
								<Button x:Name="filterImperialButton" Content="Imperial" ToolTip="Show Only Imperial Icons" Click="filterImperialButton_Click"/>
								<Button x:Name="filterMercButton" Content="Mercenary" ToolTip="Show Only Mercenary Icons" Click="filterMercButton_Click"  Margin="10,0"/>
							</StackPanel>

							<TextBlock Text="Filter By Stock Icons:" VerticalAlignment="Center" Margin="0,10,10,5"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,0">
								<Button x:Name="filterHeroButton" Content="Heroes" ToolTip="Show Only Hero Icons" Click="filterHeroButton_Click"/>
								<Button x:Name="filterVillainButton" Content="Villains" ToolTip="Show Only Stock Villain Icons" Click="filterVillainButton_Click"  Margin="10,0,0,0"/>
								<Button x:Name="filterAllyButton" Content="Allies" Margin="10,0,0,0" ToolTip="Show Only Ally Icons" Click="filterAllyButton_Click"/>
								<Button x:Name="filterStockImperialButton" Content="Imperials" ToolTip="Show Only Stock Imperial Icons" Click="filterStockImperialButton_Click"  Margin="10,0,0,0"/>
							</StackPanel>
						</StackPanel>

						<!--FACTION TEXT FILTER-->
						<TextBox x:Name="iconFilterBox" Style="{StaticResource MaterialDesignOutlinedTextBox}" materialDesign:HintAssist.Hint="Filter Icons By Name" Margin="0,10,0,0" KeyDown="iconFilterBox_KeyDown" TextChanged="iconFilterBox_TextChanged" CaretBrush="White"/>

						<!--ICON CB-->
						<Grid Margin="0,10,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<TextBlock Text="Thumbnail Icon:" VerticalAlignment="Center"/>
							<ComboBox Grid.Column="1" Name="thumbListCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" Margin="10,0,0,0" DisplayMemberPath="Name" SelectionChanged="thumbListCB_SelectionChanged"/>
						</Grid>

						<StackPanel Orientation="Horizontal">
							<Border BorderBrush="MediumPurple" BorderThickness="2" HorizontalAlignment="Left" CornerRadius="50">
								<Image x:Name="thumbPreview" Source="/Assets/Thumbnails/Other/none.png" Width="100" HorizontalAlignment="Left">
									<Image.Clip>
										<EllipseGeometry Center="50,50" RadiusX="50" RadiusY="50" />
									</Image.Clip>
								</Image>
							</Border>

							<TextBlock Text="{Binding thumbnail.Name}" VerticalAlignment="Center" Margin="20,0" FontWeight="Bold"/>
						</StackPanel>
					</StackPanel>
				</GroupBox>

				<!--ON DEFEATED-->
				<!--<GroupBox x:Name="defeatedSection" Header="On Defeated..." Visibility="Visible" Background="#FF503B7C" Margin="0,10,0,0">
					<StackPanel>
						-->
				<!--ON DEFEAT (TRIGGER)-->
				<!--
						<TextBlock Text="Fire This Trigger:"/>
						<Grid Margin="0,5,0,10">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>
							<ComboBox x:Name="triggersCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding enemyGroupData.defeatedTrigger}" SelectedValuePath="GUID"/>
							<Button x:Name="addTriggerButton" Grid.Column="1" Content="{materialDesign:PackIcon Kind=AddBold}" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Margin="10,0,0,0" ToolTip="Add New Trigger"/>
						</Grid>

						-->
				<!--ON DEFEAT (EVENT)-->
				<!--
						<TextBlock Text="Fire This Event:"/>
						<Grid Margin="0,5,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>
							<ComboBox x:Name="eventsCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding enemyGroupData.defeatedEvent}" SelectedValuePath="GUID"/>
							<Button x:Name="addEventButton" Grid.Column="1" Content="{materialDesign:PackIcon Kind=AddBold}" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Margin="10,0,0,0" ToolTip="Add New Event"/>
						</Grid>
					</StackPanel>
				</GroupBox>-->
			</StackPanel>

			<!--RIGHT PANEL-->
			<StackPanel Margin="5,0,0,0">
				<TabControl x:Name="tabControl"
  Style="{StaticResource MaterialDesignNavigatilRailTabControl}"
  materialDesign:ColorZoneAssist.Mode="PrimaryMid"
  TabStripPlacement="Top" materialDesign:NavigationRailAssist.ShowSelectionBackground="True">
					<TabControl.Background>
						<SolidColorBrush Color="#FF3A3349"/>
					</TabControl.Background>

					<!--PROPERTIES-->
					<TabItem Width="95">
						<TabItem.Header>
							<StackPanel>
								<materialDesign:PackIcon Kind="DeveloperBoard" Width="24" Height="24" HorizontalAlignment="Center" />
								<TextBlock Style="{StaticResource MaterialDesignTextBlock}" Text="Properties" HorizontalAlignment="Center"/>
							</StackPanel>
						</TabItem.Header>

						<StackPanel>
							<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0">
								<StackPanel>
									<TextBlock Text="Copy Group Properties From:" Margin="0,0,0,5"/>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="auto" />
										</Grid.ColumnDefinitions>

										<ComboBox x:Name="copyFromCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding selectedCopyFrom, RelativeSource={RelativeSource AncestorType=UserControl}}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name"/>
																<Binding Path="id"/>
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>

										<Button x:Name="confirmCopyFromButton" Click="confirmCopyFromButton_Click" Grid.Column="1" Content="{materialDesign:PackIcon Kind=CheckBold}" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Margin="10,0,0,0"/>
									</Grid>
									<TextBlock Text="Warning: This will overwrite all current General Properties. Name, Subname, ID, Type, Deployment, and Appearance are not affected." TextWrapping="Wrap" FontStyle="Italic" Margin="0,10,0,0"/>
								</StackPanel>
							</materialDesign:Card>

							<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<CheckBox x:Name="eliteCheckbox" Click="eliteCheckbox_Click" Content="This Group is Elite" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding deploymentCard.isElite}" Margin="0,4,4,4"/>
									<TextBlock Grid.Column="1" Text="Elite Groups are outlined in red unless a different icon outline color is set." TextWrapping="Wrap" FontStyle="Italic" VerticalAlignment="Center" Margin="10,0,0,0"/>
								</Grid>
							</materialDesign:Card>

							<!--FAME and REIMBURSEMENT-->
							<GroupBox Header="Fame and Reimbursement" Background="#FF503B7C" Margin="0,10,0,0">
								<Grid Margin="0,15,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="auto"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="auto"/>
									</Grid.ColumnDefinitions>

									<StackPanel Orientation="Horizontal">
										<TextBlock Text="Fame:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0"/>
										<TextBox Text="{Binding deploymentCard.fame}"  Margin="10,0" Width="50" KeyDown="textbox_KeyDown" VerticalContentAlignment="Bottom" VerticalAlignment="Center" CaretBrush="White"/>
									</StackPanel>
									<StackPanel Orientation="Horizontal" Grid.Column="2">
										<TextBlock Text="Reimbursement:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0"/>
										<TextBox Text="{Binding deploymentCard.reimb}"  Margin="10,0" Width="50" KeyDown="textbox_KeyDown" VerticalContentAlignment="Bottom" VerticalAlignment="Center" CaretBrush="White"/>
									</StackPanel>

								</Grid>
							</GroupBox>

							<GroupBox Header="Health and Speed" Background="#FF503B7C" Margin="0,10,0,0">
								<StackPanel>
									<UniformGrid Columns="2">
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="Health" VerticalAlignment="Bottom"/>
											<TextBox Grid.Row="0" Text="{Binding deploymentCard.health}" Width="50" HorizontalContentAlignment="Center" Margin="10,0,0,0" VerticalAlignment="Bottom" KeyDown="textbox_KeyDown" CaretBrush="White"/>
										</StackPanel>

										<StackPanel Orientation="Horizontal">
											<TextBlock Grid.Row="2" Text="Speed" VerticalAlignment="Bottom"/>
											<TextBox Grid.Row="2" Text="{Binding deploymentCard.speed}" Width="50" HorizontalContentAlignment="Center" Margin="10,0,0,0" KeyDown="textbox_KeyDown" CaretBrush="White"/>
										</StackPanel>
									</UniformGrid>

									<CheckBox Content="Multiply Health By Threat Level" IsChecked="{Binding useThreatMultiplier}" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" Grid.ColumnSpan="2" Margin="0,10,4,0"/>
								</StackPanel>
							</GroupBox>

							<GroupBox Header="Costs and Group Size" Background="#FF503B7C" Margin="0,10,0,0">
								<StackPanel>
									<UniformGrid Columns="2" Margin="0,10,0,0">
										<!--cost-->
										<StackPanel Orientation="Horizontal">
											<TextBlock x:Name="useDeductCost" Text="Group Cost" Margin="0,4,4,4"/>
											<TextBox Text="{Binding deploymentCard.cost}"  Margin="10,0" Width="50" KeyDown="textbox_KeyDown" VerticalContentAlignment="Bottom" VerticalAlignment="Center" CaretBrush="White"/>
										</StackPanel>

										<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
											<TextBlock Text="Redeploy Cost:" VerticalAlignment="Bottom"/>
											<TextBox Text="{Binding deploymentCard.rcost}" Margin="10,0" Width="50" KeyDown="textbox_KeyDown" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" CaretBrush="White"/>
										</StackPanel>
									</UniformGrid>
									<!--size-->
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,10,0,0">
										<TextBlock Text="Group Size:" VerticalAlignment="Bottom"/>
										<TextBox x:Name="sizeText" Text="{Binding deploymentCard.size}" Margin="10,0" Width="50" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" CaretBrush="White" KeyDown="textbox_KeyDown"/>
									</StackPanel>
									<TextBlock x:Name="sizeWarningText" Text="Warning: Changing the Group Size may require updating the Deployment Point properties of any Event Action that deploys this Group." VerticalAlignment="Center" FontStyle="Italic" TextWrapping="Wrap" Margin="0,10,0,0"/>
								</StackPanel>
							</GroupBox>

							<!--FIGURE SIZE-->
							<GroupBox Header="Figure Size" Background="#FF503B7C" Margin="0,10,0,0">
								<WrapPanel>
									<RadioButton Content="Small 1x1" Margin="5" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" GroupName="figSizeGrp" IsChecked="{Binding deploymentCard.miniSize, ConverterParameter={x:Static local:FigureSize.Small1x1}, Converter={StaticResource rbConv}}"/>

									<RadioButton Content="Medium 1x2" Margin="5" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" GroupName="figSizeGrp" IsChecked="{Binding deploymentCard.miniSize, ConverterParameter={x:Static local:FigureSize.Medium1x2}, Converter={StaticResource rbConv}}"/>

									<RadioButton Content="Large 2x2" Margin="5" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" GroupName="figSizeGrp" IsChecked="{Binding deploymentCard.miniSize, ConverterParameter={x:Static local:FigureSize.Large2x2}, Converter={StaticResource rbConv}}"/>

									<RadioButton Content="Huge 2x3" Margin="5" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" GroupName="figSizeGrp" IsChecked="{Binding deploymentCard.miniSize, ConverterParameter={x:Static local:FigureSize.Huge2x3}, Converter={StaticResource rbConv}}"/>
								</WrapPanel>
							</GroupBox>
						</StackPanel>
					</TabItem>

					<!--DEPLOYMENT - only for standalone-->
					<TabItem Width="95" x:Name="deploymentTab">
						<TabItem.Header>
							<StackPanel>
								<materialDesign:PackIcon Kind="Run" Width="24" Height="24" HorizontalAlignment="Center" />
								<TextBlock Style="{StaticResource MaterialDesignTextBlock}" Text="Deployment" HorizontalAlignment="Center"/>
							</StackPanel>
						</TabItem.Header>

						<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0">
							<StackPanel>
								<TextBlock Text="Deployment properties are only relevant for Enemy Groups and Villains." FontStyle="Italic" TextWrapping="Wrap" Margin="0,0,0,10"/>
								<TextBlock Text="Further, these properties are only used by Imperial Commander when the Character is Exported as a standalone Character and Imported by a player into their game." FontStyle="Italic" TextWrapping="Wrap" Margin="0,0,0,10"/>
								<TextBlock Text="To control how this Character deploys within a Mission, instead use the Deployment options found in the Enemy Group Deployment Event Action, and not the Deployment options below." FontStyle="Italic" TextWrapping="Wrap" Margin="0,0,0,10"/>

								<WrapPanel x:Name="deploymentOptions">
									<CheckBox x:Name="canRD" Content="Can Be Redeployed" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canRedeploy}"/>
									<CheckBox Content="Can Be Reinforced" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canReinforce}"/>
									<CheckBox Content="Can Be Defeated" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canBeDefeated}"/>
								</WrapPanel>

								<TextBlock Text="Groups that cannot Redeploy are removed from the mission and do not return to the Imperial Hand on defeat, but they can be manually deployed again with new options." TextWrapping="Wrap" FontStyle="Italic" Margin="0,5,0,0"/>
							</StackPanel>
						</materialDesign:Card>
					</TabItem>

					<!--COMBAT-->
					<TabItem Width="95">
						<TabItem.Header>
							<StackPanel>
								<materialDesign:PackIcon Kind="SwordFight" Width="24" Height="24" HorizontalAlignment="Center" />
								<TextBlock Style="{StaticResource MaterialDesignTextBlock}" Text="Combat" HorizontalAlignment="Center"/>
							</StackPanel>
						</TabItem.Header>

						<StackPanel>
							<GroupBox Header="Combat Properties" Padding="10" Background="{StaticResource GroupBG}" Margin="0,10,0,0">
								<StackPanel>
									<TextBlock Text="For Attack and Defense, use this format:" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text="#Color #Color" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text="Example: 2Red 1Green" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text=" Interprets as 2 Red dice and 1 Green dice" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>

									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
										</Grid.RowDefinitions>

										<!--<CheckBox Grid.Row="1" Content="Multiply Health By Threat Level" IsChecked="{Binding useThreatMultiplier}" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" Margin="0,10" Grid.ColumnSpan="2"/>-->

										<TextBlock Grid.Row="2" Text="Attack" VerticalAlignment="Bottom"/>
										<TextBlock Grid.Row="3" Text="Defense" VerticalAlignment="Bottom"/>

										<TextBox Grid.Row="2" Grid.Column="1" Text="{Binding groupAttack}" materialDesign:HintAssist.Hint="Example: 1Blue 2Yellow" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Margin="0,15,0,0" KeyDown="textbox_KeyDown" CaretBrush="White"/>
										<TextBox Grid.Row="3" Grid.Column="1" Text="{Binding groupDefense}" materialDesign:HintAssist.Hint="Example: 1White 1Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Margin="0,15,0,0" KeyDown="textbox_KeyDown" CaretBrush="White"/>
									</Grid>

									<!--ATTACK TYPE-->
									<UniformGrid Columns="2" Margin="0,10,0,0">
										<TextBlock Text="Attack Type" VerticalAlignment="Center"/>
										<UniformGrid Columns="2">
											<RadioButton Content="Melee" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding deploymentCard.attackType, ConverterParameter={x:Static local:AttackType.Melee}, Converter={StaticResource rbConv}}"/>
											<RadioButton Content="Ranged" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding deploymentCard.attackType, ConverterParameter={x:Static local:AttackType.Ranged}, Converter={StaticResource rbConv}}"/>
										</UniformGrid>
									</UniformGrid>
								</StackPanel>
							</GroupBox>

							<!--PRIORITY TARGET-->
							<GroupBox Header="Default Priority Target Traits" Margin="0,10,0,0" Background="#FF503B7C">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
									</Grid.ColumnDefinitions>
									<CheckBox VerticalAlignment="Center" x:Name="defPriorityCheck" Content="Target All Traits" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding groupPriorityTraits.useDefaultPriority}"/>
									<Button x:Name="targetBtn" Grid.Column="1" Content="CHANGE PRIORITY TRAITS..." Click="targetBtn_Click" IsEnabled="{Binding Path=IsChecked, ElementName=defPriorityCheck, Converter={StaticResource InvertBooleanConverter}}"/>
								</Grid>
							</GroupBox>
						</StackPanel>
					</TabItem>

					<!--CARD TEXT-->
					<TabItem Width="95">
						<TabItem.Header>
							<StackPanel>
								<materialDesign:PackIcon Kind="Book" Width="24" Height="24" HorizontalAlignment="Center" />
								<TextBlock Style="{StaticResource MaterialDesignTextBlock}" Text="Card Text" HorizontalAlignment="Center"/>
							</StackPanel>
						</TabItem.Header>

						<StackPanel>
							<GroupBox Header="Instructions, Bonuses, Abilities, Surges and Keywords" Margin="0,10,0,0" Background="#FF503B7C">
								<StackPanel>
									<TextBlock Text="Card Text data is pre-filled with EXAMPLE data by Default." FontStyle="Italic" HorizontalAlignment="Center" Margin="0,0,0,10" TextWrapping="Wrap"/>
									<WrapPanel>
										<Button x:Name="instructionsBtn" Content="INSTRUCTIONS..." Click="instructionsBtn_Click" Margin="5" Foreground="Red">
										</Button>
										<Button x:Name="bonusBtn" Content="BONUSES..." Click="bonusBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="abilityBtn" Content="ABILITIES..." Click="abilityBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="surgeBtn" Content="SURGES..." Click="surgeBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="keywordsBtn" Content="KEYWORDS..." Click="keywordsBtn_Click" Margin="5" Foreground="Red"/>
									</WrapPanel>
								</StackPanel>
							</GroupBox>

							<!--GROUP TRAITS-->
							<GroupBox Header="Character Traits" Margin="0,10,0,0" Background="#FF503B7C">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="auto" />
									</Grid.ColumnDefinitions>

									<TextBlock x:Name="traitsText" Text="None" FontWeight="Bold" TextWrapping="Wrap" VerticalAlignment="Center"/>

									<Button x:Name="editTraitsButton" Grid.Column="1" Content="EDIT TRAITS..." Click="editTraitsButton_Click" Margin="10,0,0,0"/>
								</Grid>
							</GroupBox>
						</StackPanel>
					</TabItem>
				</TabControl>
			</StackPanel>
		</UniformGrid>
	</StackPanel>
</UserControl>
