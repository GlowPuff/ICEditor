<Window x:Class="Imperial_Commander_Editor.CustomDeploymentDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Imperial_Commander_Editor"
        mc:Ignorable="d"
       	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Style="{StaticResource dws}"
        Title="Custom Deployment" Width="850" WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown" Height="700" ResizeMode="CanResize" d:Height="1000">

	<Window.Resources>
		<local:RadioBoolToIntConverter x:Key="rbConv" />
	</Window.Resources>

	<Border BorderBrush="MediumPurple" BorderThickness="2">
		<GroupBox Header="Custom Deployment Event Action (Legacy Feature For Compatibility - Use The Character Editor For Custom Groups)" Style="{DynamicResource MaterialDesignGroupBox}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition Height="*"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>

				<materialDesign:Card Background="{StaticResource CardBG}" Padding="10">
					<TextBlock Text="Custom Groups are given a unique ID and are not associated with any real, existing card in the game." TextWrapping="Wrap" HorizontalAlignment="Center"/>
				</materialDesign:Card>

				<ScrollViewer Grid.Row="1">
					<UniformGrid Columns="2" Margin="0,10,0,10">
						<!--LEFT PANEL-->
						<StackPanel Margin="0,0,5,0">
							<GroupBox Header="General Properties" Background="{StaticResource GroupBG}">
								<StackPanel>
									<TextBox x:Name="nameTB" Style="{StaticResource MaterialDesignOutlinedTextBox}" Text="{Binding enemyGroupData.cardName}" materialDesign:HintAssist.Hint="Custom Name - Required" KeyDown="nameTB_KeyDown"/>

									<TextBlock Text="Deployment Type" HorizontalAlignment="Center" Margin="0,10,0,0"/>
									<UniformGrid Columns="2" Margin="0,0,0,0">
										<RadioButton x:Name="rebelCheck" Content="Rebel" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding customType, ConverterParameter={x:Static local:MarkerType.Rebel}, Converter={StaticResource rbConv}}" GroupName="ctype"/>
										<RadioButton x:Name="impCheck" Content="Imperial" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding customType, ConverterParameter={x:Static local:MarkerType.Imperial}, Converter={StaticResource rbConv}}" GroupName="ctype"/>
									</UniformGrid>

									<TextBlock Text="Icon Type" HorizontalAlignment="Center" Margin="0,10,0,0"/>
									<UniformGrid Columns="2" Margin="0,0,0,0">
										<RadioButton x:Name="rebelIcon" Grid.Column="1" GroupName="genType" Content="Rebel" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding iconType, ConverterParameter={x:Static local:MarkerType.Rebel}, Converter={StaticResource rbConv}}"/>
										<RadioButton x:Name="impIcon" Grid.Column="2" GroupName="genType" Content="Imperial" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding iconType, ConverterParameter={x:Static local:MarkerType.Imperial}, Converter={StaticResource rbConv}}"/>
									</UniformGrid>

									<UniformGrid Columns="2">
										<TextBlock Text="Rebel Thumbnails" Margin="0,10,0,5" HorizontalAlignment="Center"/>
										<TextBlock Text="Imperial Thumbnails" Margin="0,10,0,5" HorizontalAlignment="Center"/>
									</UniformGrid>

									<UniformGrid Columns="2" IsEnabled="{Binding ElementName=useGeneric, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}">
										<ComboBox x:Name="allyCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding thumbnailGroupRebel}" SelectedValuePath="id" Margin="0,0,5,10" IsEnabled="{Binding ElementName=rebelIcon, Path=IsChecked}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name"/>
																<Binding Path="id"/>
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>


										<ComboBox x:Name="enemyCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding thumbnailGroupImperial}" SelectedValuePath="id" Margin="5,0,0,10" IsEnabled="{Binding ElementName=impIcon, Path=IsChecked}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name"/>
																<Binding Path="id"/>
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>
									</UniformGrid>

									<materialDesign:Card Background="{StaticResource CardBG}" Padding="10" Margin="0,0,0,0" >
										<CheckBox x:Name="useGeneric" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" Margin="4,0" Content="Use Generic Thumbnail" IsChecked="{Binding enemyGroupData.useGenericMugshot}"/>
									</materialDesign:Card>

									<UniformGrid Columns="2" Margin="0,10,0,0">
										<!--cost-->
										<StackPanel Orientation="Horizontal">
											<CheckBox x:Name="useDeductCost" Content="Use Cost" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useDeductCost}" Margin="0,4,4,4"/>
											<TextBox Text="{Binding groupCost}"  Margin="10,0" Width="50" KeyDown="nameTB_KeyDown" VerticalContentAlignment="Bottom" VerticalAlignment="Center" CaretBrush="White"/>
										</StackPanel>

										<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
											<TextBlock Text="Redeploy Cost:" VerticalAlignment="Bottom"/>
											<TextBox Text="{Binding groupRedeployCost}" Margin="10,0" Width="50" KeyDown="nameTB_KeyDown" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" CaretBrush="White"/>
										</StackPanel>
									</UniformGrid>

									<!--size-->
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock Text="Group Size:" VerticalAlignment="Bottom"/>
										<TextBox x:Name="sizeText" Text="{Binding groupSize}"  Margin="10,0" Width="50" KeyDown="sizeText_KeyDown" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" CaretBrush="White" LostFocus="sizeText_LostFocus"/>
									</StackPanel>

								</StackPanel>
							</GroupBox>

							<!--OPTIONS-->
							<materialDesign:Card Padding="10" Background="{StaticResource CardBG}" Margin="0,10,0,0">
								<StackPanel>
									<WrapPanel>
										<CheckBox x:Name="canRD" Content="Can Be Redeployed" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canRedeploy}"/>
										<!--<CheckBox Content="Reset on Redeployment" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useResetOnRedeployment}" IsEnabled="{Binding ElementName=canRD, Path=IsChecked}"/>-->
										<CheckBox Content="Can Be Reinforced" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canReinforce}"/>
										<CheckBox Content="Can Be Defeated" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding canBeDefeated}"/>
									</WrapPanel>

									<TextBlock Text="Groups that can't Redeploy are removed from the mission and do not return to the Imperial Hand on defeat, but they can be manually deployed again with new options." TextWrapping="Wrap" FontStyle="Italic" Margin="0,5,0,0"/>
								</StackPanel>
							</materialDesign:Card>

							<!--ON DEFEAT (TRIGGER)-->
							<GroupBox Header="On Defeated, Fire This Trigger:" Margin="0,10,0,0" Background="#FF503B7C">
								<ComboBox x:Name="triggersCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding enemyGroupData.defeatedTrigger}" SelectedValuePath="GUID"/>
							</GroupBox>

							<!--ON DEFEAT (EVENT)-->
							<GroupBox Header="On Defeated, Fire This Event:" Margin="0,10,0,0" Background="#FF503B7C">
								<ComboBox x:Name="eventsCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding enemyGroupData.defeatedEvent}" SelectedValuePath="GUID"/>
							</GroupBox>

						</StackPanel>

						<!--RIGHT PANEL-->
						<StackPanel Margin="5,0,0,0">
							<!--DEPLOYMENT-->
							<GroupBox Header="Deployment Point" Margin="0,0,0,10" Background="#FF503B7C">
								<StackPanel>
									<RadioButton GroupName="dpoint" Content="Active Deployment Point" VerticalAlignment="Center" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" IsChecked="{Binding Path=deploymentPoint, Converter={StaticResource rbConv}, ConverterParameter={x:Static local:DeploymentSpot.Active}}"/>

									<RadioButton x:Name="sdp" GroupName="dpoint" Content="Specific Deployment Point:" VerticalAlignment="Center" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" IsChecked="{Binding Path=deploymentPoint, Converter={StaticResource rbConv}, ConverterParameter={x:Static local:DeploymentSpot.Specific}}"/>

									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="auto" />
											<ColumnDefinition Width="auto" />
										</Grid.ColumnDefinitions>
										<ComboBox x:Name="dpCB" ItemsSource="{Binding deploymentPoints, RelativeSource={RelativeSource AncestorType=Window}}" Style="{StaticResource MaterialDesignOutlinedComboBox}" SelectedValue="{Binding specificDeploymentPoint}" SelectedValuePath="GUID" IsEnabled="{Binding Path=IsChecked, ElementName=sdp}" DisplayMemberPath="name" SelectionChanged="dpCB_SelectionChanged"/>
										<Button Grid.Column="1" x:Name="editGroup" Content="{materialDesign:PackIcon Kind=Edit}" Click="editDP_Click" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Margin="10,0,0,0" IsEnabled="{Binding Path=IsChecked, ElementName=sdp}"/>
									</Grid>
								</StackPanel>
							</GroupBox>

							<!--COMBAT-->
							<GroupBox Header="Combat Properties" Padding="10" Background="{StaticResource GroupBG}">
								<StackPanel>
									<TextBlock Text="For Attack and Defense, use this format:" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text="#Color #Color" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text="Example: 2Red 1Green" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>
									<TextBlock Text=" Interprets as 2 Red dice and 1 Green dice" FontStyle="Italic" TextWrapping="Wrap" HorizontalAlignment="Center"/>

									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="1*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
										</Grid.RowDefinitions>

										<StackPanel Orientation="Horizontal">
											<TextBlock Text="Health" VerticalAlignment="Bottom"/>
											<TextBox Grid.Row="0" Grid.Column="1" Text="{Binding groupHealth}" Width="50" HorizontalContentAlignment="Center" Margin="10,5,0,0" VerticalAlignment="Bottom" KeyDown="nameTB_KeyDown" CaretBrush="White"/>
										</StackPanel>

										<CheckBox Grid.Row="1" Content="Multiply Health By Threat Level" IsChecked="{Binding useThreatMultiplier}" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" Margin="0,10" Grid.ColumnSpan="2"/>

										<StackPanel Orientation="Horizontal" Grid.Column="1">
											<TextBlock Grid.Row="2" Text="Speed" VerticalAlignment="Bottom"/>
											<TextBox Grid.Row="2" Grid.Column="1" Text="{Binding groupSpeed}" Width="50" HorizontalContentAlignment="Center" Margin="10,15,0,0" KeyDown="nameTB_KeyDown" CaretBrush="White"/>
										</StackPanel>

										<TextBlock Grid.Row="2" Text="Attack" VerticalAlignment="Bottom"/>
										<TextBlock Grid.Row="3" Text="Defense" VerticalAlignment="Bottom"/>

										<TextBox Grid.Row="2" Grid.Column="1" Text="{Binding groupAttack}" materialDesign:HintAssist.Hint="Example: 1Blue 2Yellow" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Margin="0,15,0,0" KeyDown="nameTB_KeyDown" CaretBrush="White"/>
										<TextBox Grid.Row="3" Grid.Column="1" Text="{Binding groupDefense}" materialDesign:HintAssist.Hint="Example: 1White 1Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Bottom" Margin="0,15,0,0" KeyDown="nameTB_KeyDown" CaretBrush="White"/>
									</Grid>

									<!--ATTACK TYPE-->
									<UniformGrid Columns="2" Margin="0,10,0,0">
										<TextBlock Text="Attack Type" VerticalAlignment="Center"/>
										<UniformGrid Columns="2">
											<RadioButton Content="Melee" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding attackType, ConverterParameter={x:Static local:AttackType.Melee}, Converter={StaticResource rbConv}}"/>
											<RadioButton Content="Ranged" Style="{StaticResource MaterialDesignChoiceChipAccentOutlineRadioButton}" HorizontalAlignment="Stretch" IsChecked="{Binding attackType, ConverterParameter={x:Static local:AttackType.Ranged}, Converter={StaticResource rbConv}}"/>
										</UniformGrid>
									</UniformGrid>
								</StackPanel>
							</GroupBox>

							<!--PRIORITY TARGET-->
							<GroupBox Header="Priority Target Traits" Margin="0,10,0,0" Background="#FF503B7C">
								<UniformGrid Columns="2">
									<CheckBox VerticalAlignment="Center" x:Name="defPriorityCheck" Content="Target All Traits" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding enemyGroupData.groupPriorityTraits.useDefaultPriority}"/>
									<Button x:Name="targetBtn" Content="CHANGE TRAITS..." Click="targetBtn_Click" IsEnabled="{Binding Path=IsChecked, ElementName=defPriorityCheck, Converter={StaticResource InvertBooleanConverter}}"/>
								</UniformGrid>
							</GroupBox>

							<!--REPOSITION-->
							<GroupBox Header="Instructions, Bonuses, Abilities, Surges and Keywords" Margin="0,10,0,0" Background="#FF503B7C">
								<StackPanel>
									<TextBlock Text="Custom Groups are pre-filled with EXAMPLE data by Default." FontStyle="Italic" HorizontalAlignment="Center" Margin="0,0,0,10" TextWrapping="Wrap"/>

									<WrapPanel>
										<Button x:Name="instructionsBtn" Content="INSTRUCTIONS..." Click="instructionsBtn_Click" Margin="5" Foreground="Red">
										</Button>
										<Button x:Name="bonusBtn" Content="BONUSES..." Click="bonusBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="abilityBtn" Content="ABILITIES..." Click="abilityBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="surgeBtn" Content="SURGES..." Click="surgeBtn_Click" Margin="5" Foreground="Red"/>
										<Button x:Name="keywordsBtn" Content="KEYWORDS..." Click="keywordsBtn_Click" Margin="5" Foreground="Red"/>
									</WrapPanel>
								</StackPanel>
							</GroupBox>

						</StackPanel>
					</UniformGrid>
				</ScrollViewer>

				<StackPanel Grid.Row="2">
					<Separator Margin="0,0,0,10"/>
					<Button x:Name="okButton" Content="ACCEPT" Click="okButton_Click" HorizontalAlignment="Right"/>
				</StackPanel>
			</Grid>
		</GroupBox>
	</Border>
</Window>
