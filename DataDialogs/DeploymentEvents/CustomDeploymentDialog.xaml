<Window
	x:Class="Imperial_Commander_Editor.CustomDeploymentDialog"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Imperial_Commander_Editor"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Title="Custom Deployment"
	Width="850"
	Height="700"
	MouseDown="Window_MouseDown"
	ResizeMode="CanResizeWithGrip"
	Style="{StaticResource dws}"
	WindowStartupLocation="CenterScreen"
	mc:Ignorable="d">

	<Window.Resources>
		<local:RadioBoolToIntConverter x:Key="rbConv" />
	</Window.Resources>

	<Border BorderBrush="MediumPurple" BorderThickness="2">
		<GroupBox Header="(DEPRECATED) Custom Deployment Event Action" Style="{DynamicResource MaterialDesignGroupBox}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="*" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>

				<materialDesign:Card Padding="10" Background="{StaticResource CardBG}">
					<StackPanel>
						<TextBlock
							HorizontalAlignment="Center"
							Foreground="Red"
							Text="Custom Deployments are DEPRECATED"
							TextWrapping="Wrap" />
						<TextBlock
							Margin="0,0,0,10"
							HorizontalAlignment="Center"
							Text="This is now a Legacy Feature For Compatibility. It is recommended to use the Character Designer to create customized groups."
							TextWrapping="Wrap" />
						<TextBlock
							HorizontalAlignment="Center"
							Text="Custom Groups are given a unique ID and are not associated with any real, existing card in the game."
							TextWrapping="Wrap" />
						<TextBlock
							Margin="0,5,0,0"
							HorizontalAlignment="Center"
							Text="They cannot be referenced by Event Actions or used anywhere else in the Mission Editor aside from being Deployed by this Event."
							TextWrapping="Wrap" />
					</StackPanel>
				</materialDesign:Card>

				<ScrollViewer Grid.Row="1">
					<UniformGrid Margin="0,10,0,10" Columns="2">
						<!--  LEFT PANEL  -->
						<StackPanel Margin="0,0,5,0">
							<GroupBox Background="{StaticResource GroupBG}" Header="General Properties">
								<StackPanel>
									<TextBox
										x:Name="nameTB"
										materialDesign:HintAssist.Hint="Custom Name - Required"
										KeyDown="nameTB_KeyDown"
										Style="{StaticResource MaterialDesignOutlinedTextBox}"
										Text="{Binding enemyGroupData.cardName}" />

									<!--  CUSTOM COLOR  -->
									<Grid Margin="0,10,0,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="auto" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock VerticalAlignment="Center" Text="Icon Outline Color:" />
										<ComboBox
											Grid.Column="1"
											Margin="10,0,0,0"
											DisplayMemberPath="name"
											ItemsSource="{Binding deploymentColors, RelativeSource={RelativeSource AncestorType=Window}}"
											SelectedValue="{Binding deploymentOutlineColor}"
											SelectedValuePath="name"
											Style="{StaticResource MaterialDesignOutlinedComboBox}" />
									</Grid>

									<TextBlock
										Margin="0,10,0,0"
										HorizontalAlignment="Center"
										Text="Deployment Type" />
									<UniformGrid Margin="0,0,0,0" Columns="2">
										<RadioButton
											x:Name="rebelCheck"
											HorizontalAlignment="Stretch"
											Content="Rebel"
											GroupName="ctype"
											IsChecked="{Binding customType, ConverterParameter={x:Static local:MarkerType.Rebel}, Converter={StaticResource rbConv}}"
											Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
										<RadioButton
											x:Name="impCheck"
											HorizontalAlignment="Stretch"
											Content="Imperial"
											GroupName="ctype"
											IsChecked="{Binding customType, ConverterParameter={x:Static local:MarkerType.Imperial}, Converter={StaticResource rbConv}}"
											Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
									</UniformGrid>

									<TextBlock
										Margin="0,10,0,0"
										HorizontalAlignment="Center"
										Text="Icon Type" />
									<UniformGrid Margin="0,0,0,0" Columns="2">
										<RadioButton
											x:Name="rebelIcon"
											Grid.Column="1"
											HorizontalAlignment="Stretch"
											Content="Rebel"
											GroupName="genType"
											IsChecked="{Binding iconType, ConverterParameter={x:Static local:MarkerType.Rebel}, Converter={StaticResource rbConv}}"
											Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
										<RadioButton
											x:Name="impIcon"
											Grid.Column="2"
											HorizontalAlignment="Stretch"
											Content="Imperial"
											GroupName="genType"
											IsChecked="{Binding iconType, ConverterParameter={x:Static local:MarkerType.Imperial}, Converter={StaticResource rbConv}}"
											Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
									</UniformGrid>

									<UniformGrid Columns="2">
										<TextBlock
											Margin="0,10,0,5"
											HorizontalAlignment="Center"
											Text="Rebel Thumbnails" />
										<TextBlock
											Margin="0,10,0,5"
											HorizontalAlignment="Center"
											Text="Imperial Thumbnails" />
									</UniformGrid>

									<UniformGrid Columns="2" IsEnabled="{Binding ElementName=useGeneric, Path=IsChecked, Converter={StaticResource InvertBooleanConverter}}">
										<ComboBox
											x:Name="allyCB"
											Margin="0,0,5,10"
											IsEnabled="{Binding ElementName=rebelIcon, Path=IsChecked}"
											SelectedValue="{Binding thumbnailGroupRebel}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name" />
																<Binding Path="id" />
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>


										<ComboBox
											x:Name="enemyCB"
											Margin="5,0,0,10"
											IsEnabled="{Binding ElementName=impIcon, Path=IsChecked}"
											SelectedValue="{Binding thumbnailGroupImperial}"
											SelectedValuePath="id"
											Style="{StaticResource MaterialDesignOutlinedComboBox}">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name" />
																<Binding Path="id" />
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>
									</UniformGrid>

									<materialDesign:Card
										Margin="0,0,0,0"
										Padding="10"
										Background="{StaticResource CardBG}">
										<CheckBox
											x:Name="useGeneric"
											Margin="4,0"
											Content="Use Generic Thumbnail"
											IsChecked="{Binding enemyGroupData.useGenericMugshot}"
											Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
									</materialDesign:Card>

									<UniformGrid Margin="0,10,0,0" Columns="2">
										<!--  cost  -->
										<StackPanel Orientation="Horizontal">
											<CheckBox
												x:Name="useDeductCost"
												Margin="0,4,4,4"
												Content="Use Cost"
												IsChecked="{Binding useDeductCost}"
												Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
											<TextBox
												Width="50"
												Margin="10,0"
												VerticalAlignment="Center"
												VerticalContentAlignment="Bottom"
												CaretBrush="White"
												KeyDown="nameTB_KeyDown"
												Text="{Binding groupCost}" />
										</StackPanel>

										<StackPanel
											HorizontalAlignment="Left"
											VerticalAlignment="Center"
											Orientation="Horizontal">
											<TextBlock VerticalAlignment="Bottom" Text="Redeploy Cost:" />
											<TextBox
												Width="50"
												Margin="10,0"
												HorizontalContentAlignment="Center"
												VerticalContentAlignment="Bottom"
												CaretBrush="White"
												KeyDown="nameTB_KeyDown"
												Text="{Binding groupRedeployCost}" />
										</StackPanel>
									</UniformGrid>

									<!--  size  -->
									<StackPanel
										HorizontalAlignment="Left"
										VerticalAlignment="Center"
										Orientation="Horizontal">
										<TextBlock VerticalAlignment="Bottom" Text="Group Size:" />
										<TextBox
											x:Name="sizeText"
											Width="50"
											Margin="10,0"
											HorizontalContentAlignment="Center"
											VerticalContentAlignment="Bottom"
											CaretBrush="White"
											KeyDown="sizeText_KeyDown"
											LostFocus="sizeText_LostFocus"
											Text="{Binding groupSize}" />
									</StackPanel>

								</StackPanel>
							</GroupBox>
						</StackPanel>

						<!--  RIGHT PANEL  -->
						<StackPanel Margin="5,0,0,0">
							<TabControl
								x:Name="tabControl"
								materialDesign:ColorZoneAssist.Mode="PrimaryMid"
								materialDesign:NavigationRailAssist.ShowSelectionBackground="True"
								Style="{StaticResource MaterialDesignNavigationRailTabControl}"
								TabStripPlacement="Top">
								<TabControl.Background>
									<SolidColorBrush Color="#FF3A3349" />
								</TabControl.Background>

								<!--  DEPLOYMENT  -->
								<TabItem x:Name="deploymentTab" Width="95">
									<TabItem.Header>
										<StackPanel>
											<materialDesign:PackIcon
												Width="24"
												Height="24"
												HorizontalAlignment="Center"
												Kind="Run" />
											<TextBlock
												HorizontalAlignment="Center"
												Style="{StaticResource MaterialDesignTextBlock}"
												Text="Deployment" />
										</StackPanel>
									</TabItem.Header>

									<StackPanel>
										<!--  DEPLOYMENT POINT  -->
										<GroupBox
											Margin="0,10,0,10"
											Background="#FF503B7C"
											Header="Deployment Point">
											<StackPanel>
												<RadioButton
													VerticalAlignment="Center"
													Content="Active Deployment Point"
													GroupName="dpoint"
													IsChecked="{Binding Path=deploymentPoint, Converter={StaticResource rbConv}, ConverterParameter={x:Static local:DeploymentSpot.Active}}"
													Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />

												<RadioButton
													x:Name="sdp"
													VerticalAlignment="Center"
													Content="Specific Deployment Point:"
													GroupName="dpoint"
													IsChecked="{Binding Path=deploymentPoint, Converter={StaticResource rbConv}, ConverterParameter={x:Static local:DeploymentSpot.Specific}}"
													Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />

												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="1*" />
														<ColumnDefinition Width="auto" />
														<ColumnDefinition Width="auto" />
													</Grid.ColumnDefinitions>
													<ComboBox
														x:Name="dpCB"
														DisplayMemberPath="name"
														IsEnabled="{Binding Path=IsChecked, ElementName=sdp}"
														ItemsSource="{Binding deploymentPoints, RelativeSource={RelativeSource AncestorType=Window}}"
														SelectedValue="{Binding specificDeploymentPoint}"
														SelectedValuePath="GUID"
														SelectionChanged="dpCB_SelectionChanged"
														Style="{StaticResource MaterialDesignOutlinedComboBox}" />
													<Button
														x:Name="editGroup"
														Grid.Column="1"
														Width="35"
														Height="35"
														Margin="10,0,0,0"
														Click="editDP_Click"
														Content="{materialDesign:PackIcon Kind=Edit}"
														IsEnabled="{Binding Path=IsChecked, ElementName=sdp}"
														Style="{StaticResource MaterialDesignFloatingActionButton}" />
												</Grid>
											</StackPanel>
										</GroupBox>

										<!--  DEPLOYMENT OPTIONS  -->
										<materialDesign:Card Padding="10" Background="{StaticResource CardBG}">
											<StackPanel>
												<WrapPanel>
													<CheckBox
														x:Name="canRD"
														Content="Can Be Redeployed"
														IsChecked="{Binding canRedeploy}"
														Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
													<!--<CheckBox Content="Reset on Redeployment" Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" IsChecked="{Binding useResetOnRedeployment}" IsEnabled="{Binding ElementName=canRD, Path=IsChecked}"/>-->
													<CheckBox
														Content="Can Be Reinforced"
														IsChecked="{Binding canReinforce}"
														Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
													<CheckBox
														Content="Can Be Defeated"
														IsChecked="{Binding canBeDefeated}"
														Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
												</WrapPanel>

												<TextBlock
													Margin="0,5,0,0"
													FontStyle="Italic"
													Text="Groups that can't Redeploy are removed from the mission and do not return to the Imperial Hand on defeat, but they can be manually deployed again with new options."
													TextWrapping="Wrap" />
											</StackPanel>
										</materialDesign:Card>
									</StackPanel>
								</TabItem>

								<!--  COMBAT  -->
								<TabItem Width="95">
									<TabItem.Header>
										<StackPanel>
											<materialDesign:PackIcon
												Width="24"
												Height="24"
												HorizontalAlignment="Center"
												Kind="SwordFight" />
											<TextBlock
												HorizontalAlignment="Center"
												Style="{StaticResource MaterialDesignTextBlock}"
												Text="Combat" />
										</StackPanel>
									</TabItem.Header>

									<GroupBox
										Margin="0,10,0,0"
										Padding="10"
										Background="{StaticResource GroupBG}"
										Header="Combat Properties">
										<StackPanel>
											<TextBlock
												HorizontalAlignment="Center"
												FontStyle="Italic"
												Text="For Attack and Defense, use this format:"
												TextWrapping="Wrap" />
											<TextBlock
												HorizontalAlignment="Center"
												FontStyle="Italic"
												Text="#Color #Color"
												TextWrapping="Wrap" />
											<TextBlock
												HorizontalAlignment="Center"
												FontStyle="Italic"
												Text="Example: 2Red 1Green"
												TextWrapping="Wrap" />
											<TextBlock
												HorizontalAlignment="Center"
												FontStyle="Italic"
												Text=" Interprets as 2 Red dice and 1 Green dice"
												TextWrapping="Wrap" />

											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="1*" />
													<ColumnDefinition Width="1*" />
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="1*" />
													<RowDefinition Height="1*" />
													<RowDefinition Height="1*" />
													<RowDefinition Height="1*" />
												</Grid.RowDefinitions>

												<StackPanel Orientation="Horizontal">
													<TextBlock VerticalAlignment="Bottom" Text="Health" />
													<TextBox
														Grid.Row="0"
														Grid.Column="1"
														Width="50"
														Margin="10,5,0,0"
														VerticalAlignment="Bottom"
														HorizontalContentAlignment="Center"
														CaretBrush="White"
														KeyDown="nameTB_KeyDown"
														Text="{Binding groupHealth}" />
												</StackPanel>

												<CheckBox
													Grid.Row="1"
													Grid.ColumnSpan="2"
													Margin="0,10"
													Content="Multiply Health By Threat Level"
													IsChecked="{Binding useThreatMultiplier}"
													Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />

												<StackPanel Grid.Column="1" Orientation="Horizontal">
													<TextBlock
														Grid.Row="2"
														VerticalAlignment="Bottom"
														Text="Speed" />
													<TextBox
														Grid.Row="2"
														Grid.Column="1"
														Width="50"
														Margin="10,15,0,0"
														HorizontalContentAlignment="Center"
														CaretBrush="White"
														KeyDown="nameTB_KeyDown"
														Text="{Binding groupSpeed}" />
												</StackPanel>

												<TextBlock
													Grid.Row="2"
													VerticalAlignment="Bottom"
													Text="Attack" />
												<TextBlock
													Grid.Row="3"
													VerticalAlignment="Bottom"
													Text="Defense" />

												<TextBox
													Grid.Row="2"
													Grid.Column="1"
													Margin="0,15,0,0"
													HorizontalContentAlignment="Center"
													VerticalContentAlignment="Bottom"
													materialDesign:HintAssist.Hint="Example: 1Blue 2Yellow"
													CaretBrush="White"
													KeyDown="nameTB_KeyDown"
													Text="{Binding groupAttack}" />
												<TextBox
													Grid.Row="3"
													Grid.Column="1"
													Margin="0,15,0,0"
													HorizontalContentAlignment="Center"
													VerticalContentAlignment="Bottom"
													materialDesign:HintAssist.Hint="Example: 1White 1Black"
													CaretBrush="White"
													KeyDown="nameTB_KeyDown"
													Text="{Binding groupDefense}" />
											</Grid>

											<!--  ATTACK TYPE  -->
											<UniformGrid Margin="0,10,0,0" Columns="2">
												<TextBlock VerticalAlignment="Center" Text="Attack Type" />
												<UniformGrid Columns="2">
													<RadioButton
														HorizontalAlignment="Stretch"
														Content="Melee"
														IsChecked="{Binding attackType, ConverterParameter={x:Static local:AttackType.Melee}, Converter={StaticResource rbConv}}"
														Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
													<RadioButton
														HorizontalAlignment="Stretch"
														Content="Ranged"
														IsChecked="{Binding attackType, ConverterParameter={x:Static local:AttackType.Ranged}, Converter={StaticResource rbConv}}"
														Style="{StaticResource MaterialDesignChoiceChipOutlineRadioButton}" />
												</UniformGrid>
											</UniformGrid>
										</StackPanel>
									</GroupBox>
								</TabItem>

								<!--  CARD TEXT  -->
								<TabItem Width="95">
									<TabItem.Header>
										<StackPanel>
											<materialDesign:PackIcon
												Width="24"
												Height="24"
												HorizontalAlignment="Center"
												Kind="Book" />
											<TextBlock
												HorizontalAlignment="Center"
												Style="{StaticResource MaterialDesignTextBlock}"
												Text="Card Text" />
										</StackPanel>
									</TabItem.Header>

									<StackPanel>
										<GroupBox
											Margin="0,10,0,0"
											Background="#FF503B7C"
											Header="Instructions, Bonuses, Abilities, Surges and Keywords">
											<StackPanel>
												<TextBlock
													Margin="0,0,0,10"
													HorizontalAlignment="Center"
													FontStyle="Italic"
													Text="Custom Groups are pre-filled with EXAMPLE data by Default."
													TextWrapping="Wrap" />

												<WrapPanel>
													<Button
														x:Name="instructionsBtn"
														Margin="5"
														Click="instructionsBtn_Click"
														Content="INSTRUCTIONS..."
														Foreground="Red" />
													<Button
														x:Name="bonusBtn"
														Margin="5"
														Click="bonusBtn_Click"
														Content="BONUSES..."
														Foreground="Red" />
													<Button
														x:Name="abilityBtn"
														Margin="5"
														Click="abilityBtn_Click"
														Content="ABILITIES..."
														Foreground="Red" />
													<Button
														x:Name="surgeBtn"
														Margin="5"
														Click="surgeBtn_Click"
														Content="SURGES..."
														Foreground="Red" />
													<Button
														x:Name="keywordsBtn"
														Margin="5"
														Click="keywordsBtn_Click"
														Content="KEYWORDS..."
														Foreground="Red" />
												</WrapPanel>
											</StackPanel>
										</GroupBox>

										<GroupBox
											Margin="0,10,0,0"
											Background="#FF503B7C"
											Header="Priority Target Traits">
											<UniformGrid Columns="2">
												<CheckBox
													x:Name="defPriorityCheck"
													VerticalAlignment="Center"
													Content="Target All Traits"
													IsChecked="{Binding enemyGroupData.groupPriorityTraits.useDefaultPriority}"
													Style="{StaticResource MaterialDesignFilterChipSecondaryOutlineCheckBox}" />
												<Button
													x:Name="targetBtn"
													Click="targetBtn_Click"
													Content="CHANGE TRAITS..."
													IsEnabled="{Binding Path=IsChecked, ElementName=defPriorityCheck, Converter={StaticResource InvertBooleanConverter}}" />
											</UniformGrid>
										</GroupBox>
									</StackPanel>
								</TabItem>

								<!--  ON DETEATED  -->
								<TabItem Width="95">
									<TabItem.Header>
										<StackPanel>
											<materialDesign:PackIcon
												Width="24"
												Height="24"
												HorizontalAlignment="Center"
												Kind="CancelBold" />
											<TextBlock
												HorizontalAlignment="Center"
												Style="{StaticResource MaterialDesignTextBlock}"
												Text="On Defeated" />
										</StackPanel>
									</TabItem.Header>

									<StackPanel>
										<!--  ON DEFEAT (TRIGGER)  -->
										<GroupBox
											Margin="0,10,0,0"
											Background="#FF503B7C"
											Header="On Defeated, Fire This Trigger:">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="auto" />
												</Grid.ColumnDefinitions>

												<ComboBox
													x:Name="triggersCB"
													DisplayMemberPath="name"
													SelectedValue="{Binding enemyGroupData.defeatedTrigger}"
													SelectedValuePath="GUID"
													Style="{StaticResource MaterialDesignOutlinedComboBox}" />

												<Button
													x:Name="addNewTriggerButton"
													Grid.Column="2"
													Width="35"
													Height="35"
													Margin="10,0,0,0"
													Click="addNewTriggerButton_Click"
													Style="{StaticResource MaterialDesignFloatingActionButton}"
													ToolTip="Add New Trigger">
													<Image Height="20" Source="../../Assets/addtrigger.png" />
												</Button>
											</Grid>
										</GroupBox>

										<!--  ON DEFEAT (EVENT)  -->
										<GroupBox
											Margin="0,10,0,0"
											Background="#FF503B7C"
											Header="On Defeated, Fire This Event:">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
													<ColumnDefinition Width="auto" />
												</Grid.ColumnDefinitions>

												<ComboBox
													x:Name="eventsCB"
													DisplayMemberPath="name"
													SelectedValue="{Binding enemyGroupData.defeatedEvent}"
													SelectedValuePath="GUID"
													Style="{StaticResource MaterialDesignOutlinedComboBox}" />

												<Button
													x:Name="addNewEventButton"
													Grid.Column="2"
													Width="35"
													Height="35"
													Margin="10,0,0,0"
													Click="addNewEventButton_Click"
													Style="{StaticResource MaterialDesignFloatingActionButton}"
													ToolTip="Add New Event">
													<Image Height="20" Source="../../Assets/addevent.png" />
												</Button>
											</Grid>
										</GroupBox>
									</StackPanel>
								</TabItem>
							</TabControl>
						</StackPanel>
					</UniformGrid>
				</ScrollViewer>

				<StackPanel Grid.Row="2">
					<Separator Margin="0,0,0,10" />
					<Button
						x:Name="okButton"
						HorizontalAlignment="Right"
						Click="okButton_Click"
						Content="ACCEPT" />
				</StackPanel>
			</Grid>
		</GroupBox>
	</Border>
</Window>
