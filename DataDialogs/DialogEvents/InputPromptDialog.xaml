<Window x:Class="Imperial_Commander_Editor.InputPromptDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Imperial_Commander_Editor"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
				Style="{StaticResource dws}"
        Title="Input Prompt" Width="550" WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown" SizeToContent="Height" ContentRendered="Window_ContentRendered">

	<Window.Resources>
		<DataTemplate DataType="{x:Type List}" x:Key="k1">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="auto"/>
				</Grid.ColumnDefinitions>

				<StackPanel Orientation="Horizontal">
					<TextBox Text="{Binding fromValue}"  VerticalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center"/>
					<TextBlock Text="To" VerticalAlignment="Center" Margin="10,0"/>
					<TextBox Text="{Binding toValue}" VerticalAlignment="Center" MinWidth="50" HorizontalContentAlignment="Center"/>
				</StackPanel>

				<Button x:Name="editBtn" Content="EDIT INPUT..." Grid.Column="1" HorizontalAlignment="Right" Click="editBtn_Click"/>

				<Button x:Name="remQuestionButton" Click="remInputButton_Click" Grid.Column="2" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Margin="10,0,0,0" HorizontalAlignment="Right">
					<materialDesign:PackIcon Kind="RemoveBold" Width="20" Height="20" Foreground="Red"/>
				</Button>
			</Grid>
		</DataTemplate>
	</Window.Resources>

	<Border BorderBrush="MediumPurple" BorderThickness="2">
		<GroupBox Header="Input Prompt Event Action" Style="{DynamicResource MaterialDesignGroupBox}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>

				<StackPanel>
					<TextBox x:Name="textbox" Grid.Row="0" BorderThickness="2" BorderBrush="MediumPurple" AcceptsReturn="True" Foreground="White" CaretBrush="White" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" VerticalAlignment="Stretch" Text="{Binding theText}" MinHeight="100" materialDesign:HintAssist.Hint="Description"/>

					<materialDesign:Card Padding="10" Background="#FF7952C0" Margin="0,10,0,0">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition Width="1*" />
							</Grid.ColumnDefinitions>

							<Button x:Name="addNewRangeBtn" Content="+ ADD NEW VALUE RANGE" HorizontalAlignment="Left" Click="addNewRangeBtn_Click"/>
							<StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
								<Button x:Name="infoBtn" Content="SYMBOLS..." Click="infoBtn_Click"/>
								<Button x:Name="formatBtn" Content="FORMATTING..." Click="formatBtn_Click" Margin="10,0,0,0"/>
							</StackPanel>

						</Grid>
					</materialDesign:Card>

					<TextBlock Text="Values are inclusive, and using -1 for the To value will set the upper range to Infinity when testing a player's input." Margin="0,10,0,0" FontStyle="Italic" HorizontalAlignment="Center" TextWrapping="Wrap"/>

					<materialDesign:Card Background="Purple" Padding="10" Margin="0,10,0,0">
						<StackPanel>
							<TextBlock Text="Value Ranges" HorizontalAlignment="Left" VerticalAlignment="Center"/>

							<Separator Margin="0,5,0,5"/>

							<Grid MaxHeight="250">
								<ListBox x:Name="triggersLB" ItemsSource="{Binding inputList}" ItemTemplate="{StaticResource k1}" HorizontalContentAlignment="Stretch" d:ItemsSource="{d:SampleData ItemCount=1}" MaxHeight="300">
									<ListBox.ItemContainerStyle>
										<Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
											<Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="False" />
										</Style>
									</ListBox.ItemContainerStyle>
								</ListBox>
							</Grid>
						</StackPanel>
					</materialDesign:Card>

					<!--failure-->
					<GroupBox Background="{StaticResource GroupBG}" Margin="0,10,0,0" Header="Default Handler">
						<StackPanel>
							<StackPanel Orientation="Horizontal" Margin="0,0,0,10">
								<Button x:Name="editFailBtn" Content="EDIT DEFAULT TEXT..." Click="editFailBtn_Click"/>
								<TextBlock Text="When an unhandled value is entered...." VerticalAlignment="Center" FontStyle="Italic" Margin="30,0,0,0" TextWrapping="Wrap"/>
							</StackPanel>

							<UniformGrid Columns="2" Margin="0,0,0,5">
								<TextBlock Text="Fire This Trigger:" HorizontalAlignment="Center"/>
								<TextBlock Text="Fire This Event:" HorizontalAlignment="Center"/>
							</UniformGrid>

							<UniformGrid Columns="2">
								<ComboBox x:Name="triggersCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" ItemsSource="{Binding mainWindow.localTriggers, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" DisplayMemberPath="name" SelectedValue="{Binding failTriggerGUID}" SelectedValuePath="GUID" Margin="0,0,5,0"/>

								<ComboBox x:Name="eventsCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" ItemsSource="{Binding mainWindow.localEvents, RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}" DisplayMemberPath="name" SelectedValue="{Binding failEventGUID}" SelectedValuePath="GUID" Margin="5,0,0,0"/>
							</UniformGrid>
						</StackPanel>
					</GroupBox>
				</StackPanel>

				<StackPanel Grid.Row="1">
					<Separator Margin="0,10,0,10"/>
					<Button x:Name="okButton" Content="ACCEPT" Click="okButton_Click" HorizontalAlignment="Right"/>
				</StackPanel>
			</Grid>
		</GroupBox>
	</Border>
</Window>
