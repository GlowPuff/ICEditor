<Window x:Class="Imperial_Commander_Editor.AddEventDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Imperial_Commander_Editor"
        mc:Ignorable="d"
				xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
				Style="{StaticResource dws}"
        Title="Add New Event" Width="900" WindowStartupLocation="CenterScreen" MouseDown="Window_MouseDown" ContentRendered="Window_ContentRendered" SizeToContent="Height" MaxHeight="800">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<DataTemplate DataType="{x:Type local:TriggeredBy}" x:Key="k1">
				<UniformGrid Columns="3">
					<TextBlock Text="{Binding triggerName}" VerticalAlignment="Center"/>
					<TextBox Text="{Binding triggerValue}" VerticalAlignment="Center" KeyDown="nameTB_KeyDown"/>
					<Button x:Name="removeAdditionalTriggerButton" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="25" Height="25" Click="removeAdditionalTriggerButton_Click">
						<materialDesign:PackIcon Kind="Remove" Width="20" Height="20" Foreground="Red"/>
					</Button>
				</UniformGrid>
			</DataTemplate>

			<DataTemplate x:Key="eaction">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="auto" />
					</Grid.ColumnDefinitions>

					<TextBlock Text="{Binding displayName}" VerticalAlignment="Center"/>

					<UniformGrid Columns="2" Grid.Column="1">
						<Button x:Name="upBtn" Content="{materialDesign:PackIcon Kind=ChevronUp}" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="25" Height="25" Click="upBtn_Click"/>
						<Button x:Name="downBtn" Content="{materialDesign:PackIcon Kind=ChevronDown}" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="25" Height="25" Margin="5,0,0,0" Click="downBtn_Click"/>
					</UniformGrid>
				</Grid>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>

	<Border BorderBrush="MediumPurple" BorderThickness="2">
		<GroupBox Header="Add New Event" Style="{DynamicResource MaterialDesignGroupBox}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>

				<UniformGrid Columns="2">
					<!--column 1-->
					<Grid Margin="0,0,5,0">
						<Grid.RowDefinitions>
							<RowDefinition Height="auto"/>
							<RowDefinition Height="auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>

						<StackPanel>
							<UniformGrid Columns="2">
								<!--event name-->
								<GroupBox Header="Event Name" Margin="0,0,5,0" Background="#FF503B7C">
									<TextBox x:Name="nameTB" Style="{StaticResource MaterialDesignOutlinedTextBox}"  Text="{Binding name}" CaretBrush="White" KeyDown="nameTB_KeyDown"/>
								</GroupBox>
								<!--event text-->
								<GroupBox Header="Event Text" Margin="5,0,0,0" Background="#FF503B7C">
									<StackPanel Orientation="Horizontal">
										<TextBlock x:Name="etInfo" Margin="0,0,10,0" Text="Text Not Set" VerticalAlignment="Center"/>
										<Button x:Name="editTextButton" Content="Edit Text..." Click="editTextButton_Click"/>
									</StackPanel>
								</GroupBox>
							</UniformGrid>
							<TextBlock Text="If the Event Text isn't set, this Event will still fire, but no text is shown." TextWrapping="Wrap" HorizontalAlignment="Center" Margin="0,5,0,0" FontStyle="Italic"/>
						</StackPanel>
						<!--event actions-->
						<GroupBox Grid.Row="1" Header="Event Actions" Margin="0,10,0,0" MaxHeight="275">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<ListView x:Name="eventActionsCB" ItemContainerStyle="{StaticResource lbitem}" ItemsSource="{Binding eventActions}" SelectedValue="{Binding selectedEventAction, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" d:ItemsSource="{d:SampleData ItemCount=3}" MouseDoubleClick="eventActionsCB_MouseDoubleClick" ItemTemplate="{StaticResource eaction}" HorizontalContentAlignment="Stretch"/>

								<!--buttons-->
								<StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top">
									<materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}" Width="35" Height="35" Margin="10,0,0,0">
										<materialDesign:Card Margin="5" MaxHeight="200" BorderBrush="MediumPurple" BorderThickness="2">
											<StackPanel>
												<Menu Background="Purple">
													<MenuItem Header="General">
														<MenuItem Header="Mission Management" Click="MenuItem_Click" Tag="G1"/>
														<MenuItem Header="Change Mission Info" Click="MenuItem_Click" Tag="G2"/>
														<MenuItem Header="Change Objective" Click="MenuItem_Click" Tag="G3"/>
														<MenuItem Header="Modify Variable(s)" Click="MenuItem_Click" Tag="G4"/>
														<MenuItem Header="Modify Threat" Click="MenuItem_Click" Tag="G5"/>
														<MenuItem Header="Activate Event Group" Click="MenuItem_Click" Tag="G8"/>
														<MenuItem Header="Question Prompt" Click="MenuItem_Click" Tag="G6"/>
														<MenuItem Header="Text Box" Click="MenuItem_Click" Tag="G7"/>
													</MenuItem>
													<MenuItem Header="Deployment">
														<MenuItem Header="Enemy Deployment" Click="MenuItem_Click" Tag="D1"/>
														<MenuItem Header="Ally Deployment" Click="MenuItem_Click" Tag="D2"/>
														<MenuItem Header="Optional Deployment" Click="MenuItem_Click" Tag="D3"/>
														<MenuItem Header="Random Deployment" Click="MenuItem_Click" Tag="D4"/>
														<MenuItem Header="Add Group(s) to Deployment Hand" Click="MenuItem_Click" Tag="D5"/>
													</MenuItem>
													<MenuItem Header="Group Manipulation">
														<MenuItem Header="Change Group Instructions" Click="MenuItem_Click" Tag="GM1"/>
														<MenuItem Header="Change Priority Target" Click="MenuItem_Click" Tag="GM2"/>
														<MenuItem Header="Change Reposition Instructions" Click="MenuItem_Click" Tag="GM4"/>
														<MenuItem Header="Ready / Exhaust a Group" Click="MenuItem_Click" Tag="GM3"/>
														<MenuItem Header="Reset Group Defaults" Click="MenuItem_Click" Tag="GM5"/>
													</MenuItem>
													<MenuItem Header="Map and Tokens">
														<MenuItem Header="Map Management" Click="MenuItem_Click" Tag="M1"/>
														<MenuItem Header="Modify Map Entity" Click="MenuItem_Click" Tag="M2"/>
													</MenuItem>
												</Menu>
											</StackPanel>
										</materialDesign:Card>
									</materialDesign:PopupBox>
									<Button x:Name="removeActionButton" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Click="removeActionButton_Click" Margin="5,0,0,0">
										<materialDesign:PackIcon Kind="RemoveBold" Width="20" Height="20" Foreground="Red"/>
									</Button>
								</StackPanel>
							</Grid>
						</GroupBox>
						<!--additional triggers-->
						<GroupBox Grid.Row="2" Header="'Triggered By' Additional Triggers" Margin="0,10,0,0" >
							<Grid Margin="5">
								<Grid.RowDefinitions>
									<RowDefinition Height="auto" />
									<RowDefinition Height="auto" />
									<RowDefinition Height="1*" />
								</Grid.RowDefinitions>

								<UniformGrid Columns="3">
									<TextBlock Text="Trigger Name" VerticalAlignment="Center"/>
									<TextBlock Text="When Value Is..." VerticalAlignment="Center"/>
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
										<!--add existing-->
										<materialDesign:PopupBox Width="25" Height="25" Margin="0,0,10,0" StaysOpen="True" ToolTip="Add Existing Trigger">
											<Border Margin="5" MaxHeight="200">
												<ScrollViewer VerticalScrollBarVisibility="Auto">
													<ListBox x:Name="existingTriggersLB" DisplayMemberPath="name" SelectionChanged="existingTriggersLB_SelectionChanged"/>
												</ScrollViewer>
											</Border>
										</materialDesign:PopupBox>
										<!--add new-->
										<Button x:Name="addAdditionalTriggerButton" Style="{StaticResource MaterialDesignFloatingActionButton}" Width="35" Height="35" Click="addAdditionalTriggerButton_Click" ToolTip="Add New Trigger">
											<Image Source="../Assets/addtrigger.png" Height="20"/>
										</Button>
									</StackPanel>
								</UniformGrid>

								<Separator Grid.Row="1" Margin="0,5,0,2"/>

								<!--LIST BOX-->
								<ListBox Grid.Row="2" ItemsSource="{Binding additionalTriggers}" HorizontalContentAlignment="Stretch" ItemTemplate="{StaticResource k1}">
									<ListBox.ItemContainerStyle>
										<Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
											<Setter Property="materialDesign:ListBoxItemAssist.ShowSelection" Value="False" />
										</Style>
									</ListBox.ItemContainerStyle>
								</ListBox>
							</Grid>
						</GroupBox>
					</Grid>

					<!--column 2-->
					<StackPanel Margin="5,0,0,0">
						<GroupBox Header="Event Scope and Trigger Activation Behavior" Margin="0,0,0,10">
							<StackPanel>
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Global Scope:" Margin="0,0,10,0"/>
									<UniformGrid Columns="3">
										<TextBlock Text="No" HorizontalAlignment="Right"/>
										<ToggleButton x:Name="globalToggle" IsChecked="{Binding isGlobal}" Margin="10,0"/>
										<TextBlock Text="Yes" HorizontalAlignment="Left"/>
									</UniformGrid>
								</StackPanel>

								<GroupBox Header="Trigger Behavior (includes 'Additional Triggers')" Grid.Row="0" Background="{StaticResource GroupBG}" Padding="10" Margin="0,10,0,0">
									<StackPanel>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="auto" />
											</Grid.ColumnDefinitions>
											<StackPanel Margin="0,5,0,0">
												<TextBlock Text="Which Triggers fire this Event?" Margin="0,0,0,0"/>
											</StackPanel>

											<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
												<TextBlock Text="Any" HorizontalAlignment="Right" VerticalAlignment="Center"/>
												<ToggleButton IsChecked="{Binding behaviorAll}" Margin="10,0"/>
												<TextBlock Text="All" HorizontalAlignment="Left" VerticalAlignment="Center"/>
											</StackPanel>
										</Grid>

										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="auto" />
											</Grid.ColumnDefinitions>
											<CheckBox Content="This Event Is Repeatable" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding isRepeatable}" Margin="0,10,4,4"/>
											<CheckBox Grid.Column="1" Content="Fires At End Of Current Round" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding isEndOfCurrentRound}" Margin="0,5,4,4"/>
										</Grid>
									</StackPanel>
								</GroupBox>
							</StackPanel>
						</GroupBox>

						<GroupBox Header="'Triggered By' General Triggers" Margin="0,0,0,5" Background="#FF503B7C">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="auto"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>

								<UniformGrid Columns="2" Grid.Row="0">
									<!--left-->
									<StackPanel>
										<!--start of round-->
										<StackPanel Orientation="Horizontal">
											<CheckBox Content="Start of Round" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useStartOfRound}"/>
											<TextBox Margin="10,0" Width="30" Text="{Binding startOfRound}" VerticalAlignment="Center" KeyDown="nameTB_KeyDown"/>
										</StackPanel>
										<!--end of round-->
										<StackPanel Orientation="Horizontal">
											<CheckBox Content="End of Round" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useEndOfRound}"/>
											<TextBox Margin="10,0" Width="30" Text="{Binding endOfRound}" VerticalAlignment="Center" KeyDown="nameTB_KeyDown"/>
										</StackPanel>
										<CheckBox Content="All Enemy Groups Defeated" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useAllGroupsDefeated}"/>
									</StackPanel>
									<!--right-->
									<StackPanel Margin="0,0,0,10">
										<CheckBox Content="Start of Each Round" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useStartOfEachRound}"/>
										<CheckBox Content="End of Each Round" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useEndOfEachRound}"/>
										<CheckBox Content="All Heroes Are Wounded" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useAllHeroesWounded}"/>
										<CheckBox Content="Any Hero Wounded" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding _useAnyHeroWounded}"/>
									</StackPanel>
								</UniformGrid>

								<!--bottom half-->
								<StackPanel Grid.Row="1" Margin="0,10,0,0">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*" />
											<ColumnDefinition Width="2*" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*"/>
											<RowDefinition Height="1*" />
											<RowDefinition Height="1*" />
										</Grid.RowDefinitions>
										<!--ally defeated-->
										<CheckBox Grid.Row="0" Grid.Column="0" Content="Ally Defeated" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useAllyDefeated}"/>
										<ComboBox Grid.Row="0" Grid.Column="1" x:Name="alliesCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding allyDefeated}" SelectedValuePath="id"/>

										<!--hero wounded-->
										<CheckBox Grid.Row="1" Grid.Column="0" Content="Hero Wounded" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useHeroWounded}"/>
										<ComboBox Grid.Row="1" Grid.Column="1" x:Name="woundedCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" Margin="0,5" SelectedValue="{Binding heroWounded}" SelectedValuePath="id"/>

										<!--hero withdraws-->
										<CheckBox Grid.Row="2" Grid.Column="0" Content="Hero Withdraws" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useHeroWithdraws}"/>
										<ComboBox Grid.Row="2" Grid.Column="1" x:Name="withdrawsCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" DisplayMemberPath="name" SelectedValue="{Binding heroWithdraws}" SelectedValuePath="id"/>

										<!--activation-->
										<CheckBox Grid.Row="3" Grid.Column="0" Content="Activation Of" Style="{StaticResource MaterialDesignFilterChipAccentOutlineCheckBox}" IsChecked="{Binding useActivation}"/>
										<ComboBox Grid.Row="3" Grid.Column="1" x:Name="activationCB" Style="{StaticResource MaterialDesignOutlinedComboBox}" Margin="0,5" SelectedValue="{Binding activationOf}" SelectedValuePath="id">
											<ComboBox.ItemTemplate>
												<DataTemplate>
													<TextBlock>
														<TextBlock.Text>
															<MultiBinding StringFormat="{}{0}: {1}">
																<Binding Path="name"/>
																<Binding Path="id"/>
															</MultiBinding>
														</TextBlock.Text>
													</TextBlock>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>

									</Grid>
								</StackPanel>
							</Grid>
						</GroupBox>
					</StackPanel>

					<!--<materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
  PlacementMode="BottomAndAlignCentres"
  ToolTipService.Placement="Right"
  ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox">
					<StackPanel>
						<Button ToolTip="One" Content="1" />
						<Button ToolTip="Two" Content="2" />
						<Button ToolTip="Three" Content="3" />
					</StackPanel>
				</materialDesign:PopupBox>-->
				</UniformGrid>

				<StackPanel Grid.Row="1">
					<Separator Margin="0,10,0,10"/>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button x:Name="okButton" Content="ACCEPT" Click="okButton_Click"/>
						<Button x:Name="cancelButton" Content="CANCEL" Click="cancelButton_Click" IsCancel="True" HorizontalAlignment="Right" Margin="10,0,0,0" Visibility="{Binding showCancelBtn, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
					</StackPanel>
				</StackPanel>
			</Grid>
		</GroupBox>
	</Border>
</Window>
